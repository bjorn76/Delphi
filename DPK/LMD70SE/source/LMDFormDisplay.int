
uses
  Windows,
  Classes,
  Forms,
  Messages,
  Controls,
  LMDCustomBevelPanel;

type
  // new 4.0
  TLMDFormDisplayChangeEvent=procedure(Sender:TObject; NewForm:TCustomForm; var Cancel:Boolean) of object;
  TLMDFDMessageEvent=procedure(Sender:TObject; var Message:TMessage) of object;
  TLMDFormDisplayPosition=(fdpTopLeft, fdpTopCenter, fdpTopRight,
                           fdpCenterLeft, fdpCenter, fdpCenterRight,
                           fdpBottomLeft, fdpBottomCenter, fdpBottomRight, fdpClient);

  {--------------------- TLMDFormDisplay --------------------------------------}
  TLMDFormDisplay = class(TLMDCustomBevelPanel)
  private
    FForm:TForm;
    FFormName:String;
    FAssignColor,
    FHook,
    FUseRes,
    FSaveResources:Boolean;
    FOldWndProc:TWndMethod;
    FOnMessage:TLMDFDMessageEvent;

    // 4.0
    FList:TList;
    FActiveIndex:Integer;
    FPosition:TLMDFormDisplayPosition;

    FOnChange:TNotifyEvent;
    FOnChanging:TLMDFormDisplayChangeEvent;

    procedure SetForm(aValue:TForm);
    procedure SetFormName(const aValue:String);
    procedure SetActiveForm(aValue:TCustomForm);
    procedure SetActiveFormIndex(aValue:Integer);
    procedure SetPosition(aValue:TLMDFormDisplayPosition);
    function GetCount:Integer;
    function GetActiveForm:TCustomForm;
    function GetForms(Index:Integer):TCustomForm;
    function GetFormIndex(Index:TCustomForm):Integer;
    procedure CheckFormName(const aValue:String);
    procedure WMSetFocus(var Message: TWMSetFocus); message WM_SetFocus;
  protected
    procedure AlignControls(AControl: TControl;var Rect : TRect); override;
    procedure GetChange(Sender:TObject);override;
    procedure Loaded;override;
    procedure NewWndProc(var Message:TMessage);
    procedure Paint;override;
    procedure Resize;override;
  public
    constructor Create(AOwner:TComponent);override;
    destructor Destroy;override;

    // old methods prior Version 4
    function Execute(aForm:TForm):Boolean;
    function ExecuteEnh(aForm:TFormClass):TForm;
    procedure Hide;
    procedure UnLoad;
    property Form:TForm read FForm write SetForm;

    // FormList Support from Version 4
    {$IFDEF CPPBUILDER}
    function AddFormExt(aValue:TCustomForm; Display:Boolean):Integer;
    {$ELSE}
    function AddForm(aValue:TCustomForm; Display:Boolean):Integer;
    {$ENDIF}
    function AddFormClass(aValue:TFormClass; Display:Boolean):Integer;
    function FindNextForm(CurForm:TCustomForm; GoForward:Boolean): TCustomForm;
    procedure HideForm(aValue:TCustomForm);
    procedure MoveForm(aValue:TCustomForm; NewIndex:Integer);
    procedure RemoveForm(aValue:TCustomForm; FreeForm:Boolean);
    procedure SelectNextForm(GoForward: Boolean);

    property ActiveFormIndex:Integer read FActiveIndex write SetActiveFormIndex;
    property ActiveForm:TCustomForm read GetActiveForm write SetActiveForm;
    property FormCount:Integer read GetCount;
    property Forms[index:Integer]:TCustomForm read GetForms;
    property FormIndex[index:TCustomForm]:Integer read GetFormIndex;
  published
    property About;
    property Align;
    property Bevel;
    property Color;
    property Enabled;
    property FormName:String read FFormName write SetFormName;
    property HookWindowProc:Boolean read FHook write FHook default false;
    property ParentColor;
    property PopupMenu;
    property SaveResources:Boolean read FSaveResources write FSaveResources default False;
    property TabStop;
    property Visible;
    property UseResForms:Boolean read FUseRes write FUseRes default false;
    property AssignColor:Boolean read FAssignColor write FAssignColor default false;

    // NEW from 4.0
    property Position:TLMDFormDisplayPosition read FPosition write SetPosition default fdpClient;
    property OnChange:TNotifyEvent read FOnChange write FOnChange;
    property OnChanging:TLMDFormDisplayChangeEvent read FOnChanging write FOnChanging;

    // 7.0
    property OnMessage:TLMDFDMessageEvent read FOnMessage write FOnMessage;
    // ----

    // new introduced properties
    property Ctl3D;
    property DragCursor;
    property DragMode;
    property Font;
    property ParentCtl3D;
    property ParentFont;
    property ParentShowHint;
    property ShowHint;
    property TabOrder;
    property Transparent;
    property OnClick;
    property OnDblClick;
    property OnDragDrop;
    property OnDragOver;
    property OnEndDrag;
    property OnEnter;
    property OnExit;
    property OnMouseDown;
    property OnMouseMove;
    property OnMouseUp;
    property OnResize;
    property OnStartDrag;
    property Anchors;
    property Constraints;
  end;

implementation
